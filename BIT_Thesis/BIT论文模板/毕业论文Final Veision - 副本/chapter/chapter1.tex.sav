
\chapter{绪论}

\section{背景与意义}
目前，系统结构的复杂、任务需求的复杂、作业环境的复杂成为了控制理论和实践所面临的难题
\cite{SiljakDD(1978),FilipFG(2008),SiljakDD(2011)}。例如在深空探测领域，空间飞行器自身规模庞大，集机械技术、电子技术、信息技术、计算机技术、控制技术等于一体，内部结构极其复杂，系统模型往往具有非线性、耦合等特点；同时空间飞行器往往承担复杂的飞行任务，复杂的飞行任务又被分解为数量众多且需要密切协作的子任务。另外，太空环境复杂多变，地磁场、宇宙射线、太空垃圾等因素对飞行器系统造成了众多难以估计的干扰。传统的控制方法和技术难以实现对带有干扰的非线性强耦合系统的有效控制，亟需新的控制理论来解决上述难题。

面对复杂多变的任务需求，一般有以下两种解决方案。一是通过增强系统的机动性，完善系统的功能来满足任务的需求。这种方案势必增加系统的复杂程度，不仅增加研发和生产成本，同时也带来了新的技术难题。除此之外，单个系统在环境感知、信息处理等方面往往具有难以弥补的缺陷。二是由多个成本低、结构简单、感知和通信能力有限的系统密切协同来完成复杂任务。与前者相比，这种方案具有明显的优势：首先，网络通信技术的发展为多系统协同的实现提供了可能性，系统之间可以通过通信实现信息的传递和共享；其次，多系统协同降低了任务实现的风险，子系统的失效不会造成整个系统的瘫痪；最后，多系统协作增强了整个系统的空间作业能力和空间感知能力\cite{WangYue(1998)}。但是，多系统的协同控制也存在新的难题，例如如何实现系统的稳定性、如何实现任务分解、如何满足子系统的耦合约束等都是现在的研究热点和难点，也是本课题的出发点。一般情况下，多系统的协同控制被广义地称为多智能体系统的协同控制\cite{LiuJin(2001)}。
\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.6\textwidth]{figures/chap1_robocup}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{Robocup小型组比赛}
 \label{chap1_Fig.1}
 \vspace{-0.4cm}
\end{figure}


需要注意的是，以上提到的两种方案不存在相互替代的关系，在不同背景下都具有广泛的应用。前者以机器人系统为例，从简单的工业机器人到现在的智能机器人，机器人结构和功能不断完善，所承担的任务日益复杂，不仅可以在工厂流水线作业降低人力成本，而且可以在餐厅服务替代传统的服务员。后者在多飞行器协同
\cite{XiaYQ(2015)}、 多机器人协同\cite{ParkerLE(1993)}等领域都有重要应用。以Robocup\cite{KitanoH(1997)}即机器人世界杯足球锦标赛为例，如图1-1 所示，该项赛事致力于通过多个机器人之间的协同实现机器人足球队战胜人类足球冠军队的目标。除此之外，如图1-2所示，美国NASA将飞行器编队作为一种减少飞行器空气阻力的方法。这要求对每个飞行器进行精确地位置调度，以使它们保持在计算出的最佳位置\cite{Lavretsky(2002)}。 协调聚集也在军事作战\cite{Chandler(2001)}中得到应用，通过对每个飞行器规划全局最佳路径，来减少飞行器在雷达下的暴露时间。在近十年中，多移动机器人的研究在其他一些新的应用领域也得到了蓬勃的发展，例如移动传感器网络\cite{SinghH(2001)}和交通运输系统
\cite{ChengXiang(2005)} 。

\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.6\textwidth]{figures/chap1_UAV}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{无人机无人坦克军事作战模拟图}
 \label{chap1_Fig.2}
 \vspace{-0.4cm}
\end{figure}
在实际系统中，系统的状态和输入往往有限，即存在系统约束\cite{GoodwinGC(2006)}，而传统的控制理论大多不考虑约束的存在。作为目前唯一能显式处理约束的控制方法，模型预测控制自诞生以来就备受关注，在诸多领域都有应用，尤其是在过程控制领域更是创造了巨大的经济效益。在多智能体系统的研究中，除了子系统内部的约束之外，子系统之间也存在耦合，分布式模型预测控制\cite{NegenbornRR(2006)}成为了解决该问题的一种有效方法，受到了广大学者的关注和研究，但是目前研究成果较少。总之，研究多智能体系统的分布式模型预测控制具有十分重要的理论意义和实际意义。


\section{模型预测控制概括}
\subsection{模型预测控制的发展历程}
模型预测控制是20世纪70年代在工业过程控制领域中出现的一类新型计算机控制算法，已经成为处理复杂约束变量控制问题的公认标准\cite{Propoi(1963), Richalet(1978),GarciaCE(1989)}。它的出现对复杂工业过程的优化控制产生的巨大的影响，为工业控制领域带来了巨大的经济效益。其发展可以概括为以下几个阶段：20 世纪70 年代Cutler和Ramaker\cite{Cutler(1980)}提出模型预测控制的雏形，在过程控制中得到应用；80年代工业预测控制理论得到发展，开始研究优化问题的可行性问题，并在慢动态系统中得到应用；自90年代模型预测控制理论得到蓬勃发展，迭代可行性和闭环稳定性满足的条件被提出；自21 世纪开始，鲁棒模型预测控制\cite{WangYY(2002)}、非线性模型预测控制\cite{GruneL(2011)}和混合模型预测控制
\cite{BorrelliF(2013)}得到了广泛的研究，并取得到丰富的成果；2010年后，随机模型预测控制
\cite{OldewurtelF(2010)}、自适应模型预测控制\cite{WahabNA(2011),McKinleyTL(2012),AkpanVA(2011)}、分布式模型预测控制
\cite{CamachoEF(2015),GiovaniniL(2011),LiHAuto(2014),WangC(2010),DingBC(2010)}以及经济模型预测控制\cite{MaJR(2012),AngeliD(2012),AngeliD(2015)}引起了学者的重视，目前这些研究尚处于研究初期，仍存在许多研究难点。

\subsection{模型预测控制的基本原理}\label{Scheme_of_MPC}
模型预测控制的工作原理可以简单地描述为\cite{Morari(1999)}：在每一个采样时刻，根据获得的系统的当前状态，在线求解一个有限时域开环优化问题。在下一个采样时刻，重复上述过程：用新的测量值刷新优化问题并重新求解。其中，系统的当前状态为最优控制问题的初始状态，解得的最优控制序列只将第一个元素作用于被控对象上，这是它与其他常见控制算法最大的不同。



不失一般性，以离散系统为例，模型预测控制的基本框架为：
\begin{eqnarray*}
&&J^*(k,x^*,u^*)=\min_{u(\cdot)}J(k,x,u) \\
&&\hspace{2.25cm}=\min_{u(\cdot)}\sum_{l=0}^{N-1}L(x(k+l|k),u(k+l|k))+L_f(x(k+N|k))
\end{eqnarray*}
使得对于所有的$l=0,1,\ldots,N-1$
\begin{eqnarray}
&&x(k|k)=x(k), \label{initial_condition} \\
&&x(k+l+1|k) = f(x(k+l|k),u(k+l|k)), \label{model}\\
&&x(k+l|k)\in\mathbb{X},  \label{state_constraint}\\
&&u(k+l|k)\in\mathbb{U},  \label{input_constraint}\\
&&x(k+N|k)\in \mathbb{X}_{f}, \label{interminal_constraint}
\end{eqnarray}
其中$L$ 为阶段成本，$L_f$ 为终端成本，$f$ 为系统模型，$\mathbb{X}$和$\mathbb{U}$分别为状态和控制输入的允许集，$\mathbb{X}_{f}$为终端集。 一般情况下，模型预测控制的成本可以表达为二次型，即
\begin{eqnarray}
&&L(x(k+l|k),u(k+l|k))=\|x(k+l|k)\|_Q^2+\|u(k+l|k)\|_R^2, \label{local_cost} \\
&&L_f(x(k+N|k))=\|x(k+N|k)\|_P^2.  \label{terminal_cost}
\end{eqnarray}
其中正定矩阵$Q$、$R$和$P$需要满足一定条件来确保系统的稳定性。


模型预测控制的主要特点可以概括为\cite{DingBaocangBook(2008), YangPHD(2013)}：
\begin{itemize}
\item[(1)] 依赖预测模型。模型预测控制是基于预测模型的控制方法，预测模型可以是线性的或非线性的，可以是单变量的或多变量的，可以带延时的或不带延时的，还可以是带约束的或不带约束的。广义地讲，模型预测控制可以处理任意形式的模型。但是值得注意的是，模型的准确性直接影响控制性能（比如稳定性），而模型的复杂程度也直接影响优化的实时性。

\item[(2)] 滚动优化。模型预测控制采用滚动优化机制，如图\ref{chap1_Fig.3}所示，在每一个采样时刻，更新初始状态求解优化问题得到新的控制序列，仅实施控制序列的第一个元素，从而得到新的状态。值得注意的是，优化问题的目标可以是任意形式的，可以是误差的平方和，可以是误差绝对值的和，可以是最大的误差，还可以是具有特定意义的经济目标。从某种程度来说，这种滚动优化机制是模型预测控制能显式处理约束的基础，也是模型预测控制反馈校正形成闭环控制的前提。

\item[(3)] 反馈校正。模型预测控制在每个采样时刻采样当前系统状态作为新的初始状态，然后在线求解一个有限时域开环优化问题。初始状态的更新形成了反馈校正机制，虽然模型预测控制中每一个单独的优化问题是开环的，但是反馈校正机制使得模型预测控制从整体上构成了闭环反馈，这和传统的闭环反馈不同。

\item[(4)] 显式处理约束。模型预测控制是目前唯一能显式处理约束的控制方法，这是由滚动优化机制所约决定的。一般来说，系统约束的形式可以是任意的，只要能保证优化问题的可行域非空即可。但是约束的具体形式直接决定了优化问题的复杂程度，如果约束过于复杂，模型预测控制的实时性将无法实现。
\end{itemize}



\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.8\textwidth]{figures/chap1_MPC}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{滚动时域控制}
 \label{chap1_Fig.3}
 \vspace{-0.4cm}
\end{figure}

从总体上来说，模型预测控制的研究难点包括：
\begin{itemize}
\item[(1)] 实时性。模型预测控制的实时性依赖于求解优化问题的速度。除了凸优化问题之外，大部分优化问题都很难求解，或者求解速度很慢。为了提高模型预测控制的实时性，除了提高硬件的处理速度之外，还需要研究先进的求解算法。目前除了慢动态系统之外，大部分系统对实时性的要求都很高。因此，模型预测控制的实时性直接决定了其未来的应用前景。

\item[(2)] 闭环稳定性。由于模型和约束的不同，模型预测控制的稳定性有时难以满足。研究模型预测控制稳定性的主要思路是将系统的目标函数设定为李亚普诺夫函数，保证李亚普诺夫函数是单调递减。对于有限时域模型预测控制问题，文献\citep{MayneDQ(2000)}给出了保证系统稳定性时，终端成分需要满足的条件。

\item[(3)] 迭代可行性。迭代可行性是模型预测控制得以实施的重要保证。如果优化问题不可行，那么整个系统的控制将失效，导致系统性能恶化。目前研究模型预测控制的迭代可行性的前提是假设优化问题初始可行。对于有限时域模型预测控制问题，文献\citep{MayneDQ(2000)}给出了保证系统迭代可行性时，终端成分需要满足的条件。

\end{itemize}
\subsection{模型预测控制的基本研究现状}
图\ref{chap1_Fig.DMPC}展现了确定系统的模型预测控制的不同情况。当不考虑系统不确定性时，目前针对线性系统的模型预测控制不仅理论成果丰富，而且在工业上也得到了广泛的应用，成熟的商业软件和实际案例一般都是针对线性系统的，这是因为现有的优化算法和硬件处理针对线性系统的优化问题时能满足实时性的要求。研究表明，线性无穷时域无约束模型预测控制和线性二次型调节器\cite{CallierFM(2012)}等价。对于无约束的有限时域模型预测控制问题，可以通过动态规划求解控制器的显示结构，即可以得到状态反馈增益。对于带有约束的有限时域模型预测控制\cite{MayneDQBOOK(2009)}，为了确保系统的稳定性，可以通过求解代数$Riccati$ 方程得到终端权重矩阵$P$，终端控制器为简单的状态反馈形式，同时终端集为正定不变集。非线性模型预测控制方法在理论上也取得了丰富的成果，已经在原理上解决了稳定性和可行性等问题。对于带有约束的非线性模型预测控制\cite{ChenHAuto(1998)}，为了满足稳定性和可行性的要求，一般假设系统方程$f(\cdot)$ 二次连续可导，同时在平衡点附件将系统线性化得到系统矩阵和输入矩阵，通过求解$Lyapunov$方程得到终端权重矩阵$P$，和线性系统一样，终端控制器也采用状态反馈形式。然而在工业上非线性模型预测控制应用尚少，主要原因有两方面：一是工业系统很难建立准确的非线性模型，机理建模成本高；二是现有的非线性优化算法难以满足工业现场实时性的要求。

\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.8\textwidth]{figures/chap1_deterministic_MPC}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{确定系统的模型预测控制}
 \label{chap1_Fig.DMPC}
 \vspace{-0.4cm}
\end{figure}

若使用理想的、精确的系统模型作为预测模型，模型预测控制获得的效果自然最好。然而，对于现实世界的控制对象，无论是工业过程还是社会系统，总是广泛存在着不确定因素和各种外界干扰，因此很难建立被控对象的精确模型。我们将含有不确定性的系统称为不确定系统。如果采用基于标称模型设计的模型预测控制器对不确定系统进行控制，其闭环系统的可行性、稳定性都可能受到影响，甚至会导致系统无可行解和不稳定。因此，研究针对不确定系统的模型预测控制器设计方法具有重要的现实意义，并且已经成为预测控制理论研究的重点。

针对不确定系统，目前主要存在两类不同的模型预测控制策略。一类是通过考虑模型不确定性的最糟糕情况来设计模型预测控制策略，进而保证对所有可能的不确定性实现该策略都是有效的，这种方法称为鲁棒模型预测控制。鲁棒模型预测控制的研究从上世纪90年代开始，到现在为止已经形成了丰富的成果
\cite{BemporadA(1999),JalaliAA(2006),MayneDQ(2005)}。$min-max$\cite{KothareMV(1996), KanevS(2006), DingBC(2008)} 方法是一种典型的鲁棒模型预测控制方法，即在扰动或者不确定性达到最坏的情况下，通过最小化成本函数来计算最优控制作用，
要求庞大的在线计算量。并且，由于最糟糕情况时不确定性可能是任意大的且在实际中往往不一定发生，
因此针对最糟糕情况的不确定性进行控制器设计容易导致较强的保守性，甚至可能出现优化问题没有可行解\cite{LiSQ(2010)}。 另外，早期的鲁棒模型预测控制在假设状态可观的条件下采用状态反馈的形式。但是在实际中多数系统不满足系统可观条件，为此基于输出反馈的鲁棒模型预测控制得到了广泛的研究，而且系统的可行性和稳定性成了新的难题。针对带有加性噪声的定常系统，文献\citep{MayneDQ(2009)}利用时变的状态估计器和基于Tube的输出反馈模型预测控制器保证了系统的迭代可行性和稳定性。

另一方面，如果已知系统不确定性的概率信息（例如，分布分布函数或一阶矩和二阶矩），
并且将这些概率信息合理的应用到预测控制器的设计中，就可以得到保守性较低的设计，
这种方法称为随机模型预测控制
\cite{VanHessemDH(2002),KouvaritakisB(2010),CannonM(2012),ZeilingerMN(2014)}。
随机模型预测控制保守性低，而且带有概率约束的随机模型预测控制更具有现实意义。除了稳定性和可行性要求之外，庞大的计算量也是随机模型预测控制遇到的难题。针对带有随机约束的系统，文献
\citep{CannonMTAC(2011)}提出了一种随机Tube的模型预测控制策略，不仅可以满足系统的稳定性，而且降低了在线的计算量。总体上说，由于随机模型预测控制的研究难度大，尚处于研究初期。

\subsection{模型预测控制研究趋势}
模型预测控制已经在慢动态的工程控制得到了广泛的应用，但是在实时性要求高的系统中应用时一般都不考虑约束，而且系统一般都做线性化处理。因此研究和发展约束模型预测控制的理论和高效算法已成为当务之急
\cite{XiYG(2013)}。 其中除了非线性模型预测控制之外，分布式模型预测控制研究也是一个重要的研究趋势，需要新的理论处理子系统耦合、不确定性、动态跟踪等问题
\cite{KeviczkyTAuto(2006),KuwataY(2007),RichardsA(2007),ScattoliniR(2009)}。而分布式模型预测控制的一个重点研究方向是如何将现有的涉及终端集、终端成本和终端控制器的理论推广和扩展到分布式模式下，而且这些元素相互解耦。除此之外，为了满足实时性要求，研究高效的优化算法也成为了新的研究热点，例如实时模型预测控制
\cite{ZeilingerMN(2011)}就是一项重要成果。

\section{大规模复杂系统的模型预测控制}
一般情况下，大规模复杂系统组成单元多，模型复杂，变量多，约束多，一般的模型预测控制方法难以处理。随着通信技术的发展，除了传统的递阶控制结构外，近年来，研究者提出了不同结构的控制方法来处理此类问题。
下面，我们以$N_a$个动态解耦的线性时不变子系统为例
分别对集中式、分散式和分布式三种控制结构下的模型预测控制进行介绍，并比较不同结构的优缺点。每个子系统模型为
\begin{eqnarray}
x_i(k+1)=A_ix_i(k)+B_iu_(k), \ i=1,2,\ldots,N_a, \label{system_model}
\end{eqnarray}
其中状态和控制约束分别为$x_i\in\mathbb{X}_i$和$u_i\in\mathbb{U}_i$。
\subsection{集中式模型预测控制}
考虑$N_a$个动态解耦的子系统（\ref{system_model}），整个系统的模型可以描述为：
\begin{eqnarray}
x(k+1)=Ax(k)+Bu(k),  \label{system_model1}
\end{eqnarray}
其中$x(k) = \left [\begin{array}{ccccc}
x_1(k)\\
x_2(k) \\
\vdots \\
x_{N_a}(k)
\end{array}\right]$，$A = \left [\begin{array}{ccccc}
A_1 & \textbf{0} & \ldots & \textbf{0} \\
\textbf{0} & A_2 & \ldots & \textbf{0} \\
\vdots & \vdots & \ddots & \vdots \\
\textbf{0} & \textbf{0} & \ldots & A_{N_a}
\end{array}\right]$，$B = \left [\begin{array}{ccccc}
B_1 & \textbf{0} & \ldots & \textbf{0} \\
\textbf{0} & B_2 & \ldots & \textbf{0} \\
\vdots & \vdots & \ddots & \vdots \\
\textbf{0} & \textbf{0} & \ldots & B_{N_a}
\end{array}\right]$，$u(k) = \left [\begin{array}{ccccc}
u_1(k)\\
u_2(k) \\
\vdots \\
u_{N_a}(k)
\end{array}\right]$。整个系统需要满足的约束为：$x\in\mathbb{X}\triangleq\mathbb{X}_1\times\mathbb{X}_2\times\ldots\times\mathbb{X}_{N_a}$ 和
$u\in\mathbb{U}\triangleq\mathbb{U}_1\times\mathbb{U}_2\times\ldots\times\mathbb{U}_{N_a}$。 集中式模型预测控制的结构图如图\ref{chap1_CDMPC}所示。

\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.5\textwidth]{figures/chap1_CMPC}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{集中式模型预测控制}
 \label{chap1_CDMPC}
 \vspace{-0.4cm}
\end{figure}

集中模型预测控制的优化问题可以描述为：
\begin{eqnarray*}
\min_{u(\cdot)}J(k,x,u)=\min_{u(\cdot)}\sum_{l=0}^{N-1}[\|x(k+l|k)\|_Q^2+\|u(k+l|k)\|_R^2]+\|x(k+N|k)\|_P^2
\end{eqnarray*}
使得对于所有的$l=0,1,\ldots,N-1$
\begin{eqnarray}
&&x(k|k)=x(k), \label{initial_condition}\\
&&x(k+l+1|k) = Ax(k+l|k)+Bu(k+l|k), \label{model}\\
&&x(k+l|k)\in\mathbb{X},  \label{state_constraint}\\
&&u(k+l|k)\in\mathbb{U},  \label{input_constraint}\\
&&x(k+N|k)\in \mathbb{X}_{f}. \label{interminal_constraint}
\end{eqnarray}

集中式模型预测控制需要求解整个系统的优化问题，因此得到的控制器是最优的，系统的性能也是最优的。但是如果控制器失效或者发生故障，整个系统将无法正常工作甚至瘫痪，这是集中式结构的最大隐患。除此之外，系统庞大的规模增加了在线计算负担，实时性更难以保证。
\subsection{分散式模型预测控制}
与集中式结构不同，分散式模型预测控制\cite{CamponogaraE(2002),CuiH(2002), VanAntwerpJG(2000),VaccariniM(2009),RaimondoDM(2007),GomezM(1998)}将整个系统分割成若干子系统，每个子系统分别设计自己的控制器，控制器之间不存在信息交换，其结构如图\ref{chap1_decentralized_MPC}所示。
\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.5\textwidth]{figures/chap1_decentralized_MPC}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{分散式模型预测控制}
 \label{chap1_decentralized_MPC}
 \vspace{-0.4cm}
\end{figure}

一般情况下，分散式模型预测控制的优化问题可以描述为：对于子系统$i=1,2,\ldots,N_a$
\begin{eqnarray*}
\min_{u_i(\cdot)}J_i(k,x_i,u_i)=\min_{u_i(\cdot)}\sum_{l=0}^{N-1}[\|x_i(k+l|k)\|_{Q_{i}}^2+\|u_i(k+l|k)\|_{R_{i}}^2]+\|x_i(k+N|k)\|_{P_{i}}^2
\end{eqnarray*}
使得对于$l=0,1,\ldots,N-1$
\begin{eqnarray}
&&x_i(k|k)=x_i(k), \label{initial_condition} \\
&&x_i(k+l+1|k) = A_ix(k+l|k)+B_iu_i(k+l|k), \label{model}\\
&&x_i(k+l|k)\in\mathbb{X}_i,  \label{state_constraint}\\
&&u_i(k+l|k)\in\mathbb{U}_i,  \label{input_constraint}\\
&&x_i(k+N|k)\in \mathbb{X}_{if}. \label{interminal_constraint}
\end{eqnarray}


2006年，Magni和Scattofim\cite{MagniL(2006)}针对受到衰减干扰影响的离散时间非线性系统，提
出了一种分散式模型预测控制算法。在设计分散式模型预测控制器时，将不同子系统之
间相互耦合作用的影响视为干扰项，而干扰的大小依赖于系统状态的范数。针对具有控制输入约束的大规模线性过程，文献\citep{AlessioA(2002)}将线性过程的全局系统模型首先近似为若干个（可能重叠）的更小规模的子系统模型，然后为每个子系统模型设计分散式模型预测控制器，而子系统模型间的解耦程度
则作为预测控制器设计中的一个调节参数。对于带有输入约束的开环渐近稳定系统和无
约束的开环不稳定系统，文献\citep{AlessioA(2002)}分别给出了保证闭环稳定性的充分性条件。

与集中式模型预测控制相比，分散式模型预测控制将系统规模降维，减小了在线优化的计算量，同时增强了系统的可靠性。
\subsection{分布式模型预测控制}
分布式模型预测控制\cite{HashimotoK(2015),GaoYL(2015),DaiL(2015)}和分散式模型预测控制主要差异在于控制器是否有信息交换，其结构如图\ref{chap1_DMPC}所示。目前，分布式模型预测控制方法尚在研究初期，得到了学者的广泛专注，其主要优点为：
\begin{itemize}
\item[(1)] 与集中式模型预测控制相比，分布式模型预测控制可以减小在线计算量，提高系统的实时性。
\item[(2)] 和分散式模型预测控制相比，分布式模型预测控制允许子系统控制器之间进行通
信和信息共享，从而可以充分考虑子系统之间的耦合和协调等问题，不仅具有更加广泛的现实意义，而且可以使系统性能更优。
\item[(3)] 分布式模型预测控制还有可扩展性、可靠性高及易维护性等优点。
\end{itemize}
\begin{figure}[!htb]
 \centering
 \includegraphics[width=0.5\textwidth]{figures/chap1_DMPC}\\    % e.g.,[scale=0.75], [width=0.75\textwidth ]
 \caption{分散式模型预测控制}
 \label{chap1_DMPC}
 \vspace{-0.4cm}
\end{figure}

最近，文献\citep{MaestreJM(2014),NegenbornRR(2014)}总结了分布式模型预测控制现有的主要工作，分类列举了针对特定问题的分布式模型预测控制策略。分布式模型预测控制的耦合方式有三种：动态耦合、成本耦合和约束耦合。动态耦合指的是模型耦合，即子系统的动态模型中涉及其他子系统的状态\cite{ConteC(2014)}；成本耦合指的是子系统的阶段成本与其他系统有关，处理成本耦合大多采用同步更新
\cite{DunbarWBAuto(2006)}；约束耦合指的是多个子系统的状态或输入要满足一定的限制，处理此问题一般采用顺序更新\cite{TroddenPAuto(2013)}。分布式模型预测控制任务一般分为调节和非调节，调节是将所有系统的状态稳定到平衡点，非调节是指每个子系统的期望轨迹是动态的，比如动态跟踪、一致、编队等。分布式模型预测调节控制中，当耦合是动态耦合时，文献\citep{ConteC(2014)}给出了基于线性矩阵不等式形式的分布式终端集设计方法；当耦合是成本耦合时，文献\citep{DunbarWBAuto(2006)}和\citep{DunbarWBPHD(2004)}给出了同步更新条件下系统可行性和稳定性的充分条件；当耦合是约束耦合时，可以采用顺序更新方式，“冻结”其他系统的状态来保证约束的满足。在这里我们为了简化，我们假设子系统之间是动态解耦的。

将分布式模型预测控制可以分为协同分布式模型预测控制和非协同分布式模型预测控制，两者之间的差别主要在于是否具有全局性能指标。为了实现具有全局性能指标，每个系统对邻居系统的状态或输入有很强的依赖性，因此协同分布式模型预测控制需要很强的通信能力。相对而言，非协同分布式模型预测控制主要依赖于局部信息，所以对通信能力的要求较弱。在优化问题描述时，协同分布式模型预测控制和非协同分布式模型预测控制的差异体现在是否存在成本耦合。


非协同分布式模型预测控制的优化问题可以简单地描述为：对于子系统$i=1,2,\ldots,N_a$
\begin{eqnarray*}
\min_{u_i(\cdot)}J_i(k,x_i,u_i)
\end{eqnarray*}
使得
对于所有的$l=0,1,\ldots,N-1$
\begin{eqnarray}
&&x_i(k|k)=x_i(k), \label{initial_condition} \\
&&x_i(k+l+1|k) = A_ix(k+l|k)+B_iu_i(k+l|k), \label{model}\\
&&x_i(k+l|k)\in\mathbb{X}_i,  \label{state_constraint}\\
&&g_k(x_i(k+l|k),u_i(k+l|k),x_j(k+l|k),u_j(k+l|k))\leq0, \ k\in\mathcal{C}_i, \ j\in\mathcal{N}_i \label{coupled_constraint}\\
&&u_i(k+l|k)\in\mathbb{U}_i,  \label{input_constraint}\\
&&x_i(k+N|k)\in \mathbb{X}_{if}. \label{interminal_constraint}
\end{eqnarray}
其中（\ref{coupled_constraint}）为耦合约束，$\mathcal{C}_i$为子系统$i$的耦合集，$\mathcal{N}_i$为子系统$i$的邻居集合。

协同分布式模型预测控制的优化问题可以简单地描述为：对于子系统$i=1,2,\ldots,N_a$
\begin{eqnarray*}
\min_{u_i(\cdot), u_j(\cdot)}J_i(k,x_i,u_i)+\sum_{j\in\mathcal{N}_i}\alpha_j J_j(k,x_j,u_j)
\end{eqnarray*}
使得
对于所有的$l=0,1,\ldots,N-1$
\begin{eqnarray}
&&x_i(k|k)=x_i(k), \label{initial_condition}\\
&&x_i(k+l+1|k) = A_ix(k+l|k)+B_iu_i(k+l|k), \label{model}\\
&&x_i(k+l|k)\in\mathbb{X}_i,  \label{state_constraint}\\
&&g_k(x_i(k+l|k),u_i(k+l|k),x_j(k+l|k),u_j(k+l|k))\leq0, \ k\in\mathcal{C}_i, \ j\in\mathcal{N}_i \label{coupled_constraint1}\\
&&u_i(k+l|k)\in\mathbb{U}_i,  \label{input_constraint}\\
&&x_i(k+N|k)\in \mathbb{X}_{if}. \label{interminal_constraint}
\end{eqnarray}
其中$\alpha_j$为其他子系统成本权重的系数。

在分布式框架下，子系统的优化更新方式主要有三种[9]：同步式、顺序式、迭代式。同步更新
\cite{DunbarWBAuto(2006)}即在更新时刻 ，所有子系统都同时解优化问题得到自己的控制序列，在同步更新模式下，一般要设计每个系统的假设轨迹和相容性约束；顺序更新
\cite{TroddenPAuto(2013),TroddenP(2006)}即在每个更新时刻，顺序求解子系统的优化问题得到次优的控制序列，同时其他子系统利用之前得到的最新预测控制输入，值得注意的是更新顺序可以是先验的也可以是随机的；迭代更新\cite{RichardsA(2007),VenkatAN(2008)}即每个子系统解优化问题之后将结果通信给邻居，在局部收敛性条件满足之前一直迭代优化。

分布式模型预测控制的可行性和稳定性条件是目前的研究难点。文献
\citep{TroddenPAuto(2013)}针对带有耦合约束和有界加性噪声的多个线性系统，采用顺序更新的方式，设计了一种分布式协同鲁棒模型预测控制方案，保证了系统的可行性和稳定性。文献\citep{MullerMA(2011)}将单个系统模型预测控制的稳定性条件推广到了多个系统的分布式模型预测控制稳定性条件：正不变终端集、合适的终端控制器以及整个系统的局部稳定性。尽管该文献设计了一种迭代算法来求解每个子系统的独立终端集，然而其保守性太强。在现有的文献中，仅有少数的文献针对特定的系统设计了子系统之间不存在耦合的终端集。文献\citep{WangPTAC(2014)}采用同步更新方式，主要研究了具有非完整性约束的多轮式小车的编队。为了满足\citep{MullerMA(2011)}提出的稳定性条件，\citep{WangPTAC(2014)}利用参考轨迹设计了具有正定不变性的终端集和相应的终端控制器，并提出了在同步更新方式下的相容性约束，给出了系统的迭代可行性和渐进稳定性条件。

\section{分布式模型预测控制的应用}
分布式模型预测控制具有广泛的应用前景，在多机器人\cite{RichardsA(2007),WeiS(2010)}、多飞行器
\cite{MorganDJGCD(2014)}以及物联网\cite{VaccariniM(2009)} 等领域都有重要应用。Richards与How\cite{RichardsA(2007)} 研究分布式鲁棒模型预测控制以解决单体运动模型为线性时不变系统且运动中存在扰动时的协同问题，提出一种优化问题的分布式串行求解方案，证明了所得算法能够保证优化的可行性和各单体系统的稳定性。魏善碧、柴毅和丁宝苍\cite{WeiS(2010)}在研究多自主体系统编队控制问题的分布式模型预测控制时，进一步改进了智能体动作的连贯性。针对一群性能受限的空间飞行器，Morgan等\cite{MorganDJGCD(2014)}提出了一种分散式模型预测控制方案来实现最优导航和队形重构。
Yamaguchi等\cite{YamaguchiH(2003)}为了实现多个非完整约束的移动机器人的编队，提出了一种分布式光滑时变的反馈控制器，实现多个子系统之间的协同。Lan 和 Yan等\cite{LanY(2010)}提出了分布式混合控制策略来实现多个独轮小车的协同控制。当跟踪目标设置点改变时，Ferramosca等\cite{FerramoscaA(2013)}给出了一种基于线性模型预测控制的协同分布式跟踪策略，这种策略能保证系统收敛到集中式最优点。Nascimento\cite{NascimentoTP(2013)}给出了一种基于非线性编队模型的预测控制器设计方案。Dunbar和Murray\cite{DunbarWBC(2002)}研究了一组具有非线性动力学模型的子系统，设计了分布式的模型预测控制方法，只要初始时leader能与follower通信，即能保证leader-follower 的串行稳定性，并且能处理更加严格的约束。Stewart等\cite{StewartBT(2010)}针对有限数量的子系统，设计了一种线性模型预测方法，保证系统指数收敛，并且当终止优化迭代之后，系统仍保持稳定。

\section{预备知识}
本节将预先给出一些和本论文密切相关的基本概念、函数定义和定理。

\subsection{基本概念}

\begin{definition}
（开球）以$x_c\in\mathbb{R}^n$为中心，以$\epsilon>0$为半径的开球定义为：
\begin{eqnarray}
\mathcal{B}_{\epsilon}(x_c)=\{x\in\mathbb{R}^n\mid \|x-x_c\|<\epsilon\}.
\end{eqnarray}
\end{definition}

\begin{definition}
（内点）对于$x\in\mathcal{C}\subseteq\mathbb{R}^n$，如果存在$\epsilon>0$满足
\begin{eqnarray}
\{y\mid\|y-x\| \leq\epsilon\}\subseteq\mathcal{C}
\end{eqnarray}
即存在一个以$x$为中心的完全属于$\mathcal{C}$的球，则称其为$\mathcal{C}$的内点。
\end{definition}

\begin{definition}
（内部）$\mathcal{C}$的内部所有内点组成的集合称为$\mathcal{C}$的内部，记为$int\mathcal{C}$。
\end{definition}

\begin{definition}
（开集/闭集）如果$int\mathcal{C}=\mathcal{C}$，即$\mathcal{C}$的每一个点都是内点，则称$\mathcal{C}$ 为开集。如果集合$\mathcal{C}\subseteq\mathbb{R}^n$的补集$\mathbb{R}^n\setminus\mathcal{C}=\{x\in\mathbb{R}^n\mid x\notin\mathcal{C}\}$为开集，则称其为闭集。
\end{definition}


\begin{definition}
（有界集）如果存在一个尺度半径$r<\infty$和一个点$x\in\mathbb{R}^n$使得集合$\mathcal{C}\subseteq\mathcal{B}_{r}(x)$，则称集合$\mathcal{C}$为有界集。
\end{definition}

\begin{definition}
（紧集）集合$\mathcal{C}$既为闭集又为有界集，称称其为紧集。
\end{definition}


\begin{definition}
（凸集）如果集合$\mathcal{C}$中任意两点之间的线段仍在集合$\mathcal{C}$内部，即
对于任意$x_1,x_2\in\mathcal{C}$和$0\leq\theta\leq1$，满足
\begin{eqnarray}
\theta x_1+(1-\theta)x_2\in\mathcal{C},
\end{eqnarray}
那么称集合$\mathcal{C}$为凸集。
\end{definition}

\begin{definition}
（正定不变集）对于系统$x(k+1)=f(x(k))$，如果$x\in\mathcal{C}$，$f(x)\in\mathcal{C}$，则称$\mathcal{C}$ 为正定不变集。
\end{definition}

\subsection{函数定义}
\begin{definition}
（凸函数）如果函数$f$的定义域$\mathcal{D}$是凸集，且对于任意的$(x_1,x_2)\in\mathcal{D}\times\mathcal{D}$和$0\leq\theta\leq1$，满足
\begin{eqnarray}
f(\theta x_1+(1-\theta)x_2)\leq\theta f(x_1)+(1-\theta)f(x_2),
\end{eqnarray}
则称$f(\cdot):\mathcal{D}\rightarrow\mathbb{R}^n$为凸函数。
\end{definition}

\begin{definition}
（凹函数）如果函数$-f(x)$是凸函数，则$f(\cdot):\mathcal{D}\rightarrow\mathbb{R}^n$为凹函数。
\end{definition}

\begin{definition}
（$Lipschitz$连续函数）函数$f$的定义域为$\mathcal{D}\subseteq\mathbb{R}^m$，如果对于任意的$(x_1,x_2)\in\mathcal{D}\times\mathcal{D}$，存在$L>0$，满足
\begin{eqnarray}
\|f(x_1)-f(x_2)\|\leq L\|x_1-x_2\|,
\end{eqnarray}
则$f(\cdot):\mathcal{D}\rightarrow\mathbb{R}^n$为$Lipschitz$连续函数。
\end{definition}

\subsection{相关定理}
\begin{theorem}
（$Weierstrass$定理）假设$f(\cdot):\mathbb{R}^n\rightarrow\mathbb{R}$是连续的，且集合$\mathbb{X}\subseteq\mathbb{R}^n$ 是紧集，则存在一个$\hat{x}\in\mathbb{X}$，使得
\begin{eqnarray}
f(\hat{x})=\inf_{x\in\mathbb{X}}f(x),
\end{eqnarray}
即很容易定义$\min_{x\in\mathbb{X}}f(x)$。
\end{theorem}

\begin{theorem}
\label{terminal_ingredients}
（终端成分需要满足的条件）对于小节\ref{Scheme_of_MPC}中提到的具有一般形式的模型预测控制框架，如果下面四个条件满足，则优化问题的迭代可行性和系统的闭环稳定性可以得到保证：
\begin{itemize}
\item[(1)] $\mathbb{X}_{f}$是包含原点的闭集，且满足$\mathbb{X}_{f}\subseteq\mathbb{X}$ （$\mathbb{X}_{f}$中的元素满足状态约束）；
\item[(2)] 对于所有的$x\in\mathbb{X}_{f}$，终端控制器$\kappa_f(x)\in\mathbb{U}$（
    $\mathbb{X}_{f}$中的元素满足输入约束）；
\item[(3)] 对于所有的$x\in\mathbb{X}_{f}$，$f(x,\kappa_f(x))\in\mathbb{X}_{f}$（
    $\mathbb{X}_{f}$是正定不变集）；
\item[(4)] 对于所有的$x\in\mathbb{X}_{f}$，$L_f(f(x,\kappa_f(x)))-L_f(x)+L(x)\leq0$（$L_f$ 为局部$Lyapunov$函数）。
\end{itemize}
\end{theorem}

\section{本文主要研究工作和章节安排}

现实中受约束的大规模复杂系统广泛存在，研究和推广分布式模型预测控制理论十分必要。自2010年以来，分布式模型预测控制理论得到了广大学者的关注，目前已经取得了重要进展，但是依然存在许多研究难点，主要包括：
\begin{itemize}
\item[(1)] 如何处理子系统耦合。子系统耦合是广泛存在的，由于耦合部分的存在，在分布式结构下，如果没有合适的处理方式，耦合子系统的优化问题往往无法求解。因此选择合适的更新方式处理耦合部分使得优化问题可解是分布式模型预测控制的关键。
    
\item[(2)] 如何设计解耦的终端成分。定理\ref{terminal_ingredients}给出了集中式结构下终端成分需要满足的条件。现有的很多工作是将此定理中的条件推广直接到分布式结构下，但是子系统的终端成分是耦合的，尤其是终端集，因此优化问题求解十分复杂。如何设计每个子系统对应的解耦的终端成分是分布式模型预测控制研究的一个重要挑战。
    
\item[(3)] 如何满足迭代可行性和闭环稳定性。自上世纪90年代开始，模型预测控制的可行性和稳定性研究取得了丰富的研究成果。但是在分布式模型预测控制中，优化问题的迭代可行性与更新策略息息相关，而闭环稳定性的研究主要侧重的是整个系统的稳定性，而非单个子系统的稳定性。因此需要新的思路和技术来解决分布式模型预测控制的迭代可行性和闭环稳定性问题。
\end{itemize}


针对上述问题，本文以多智能体系统为研究对象，开展了分布式模型预测控制的系列研究，具体的研究内容以及结构安排如下：

第一章 \ 绪论

主要介绍了课题的研究背景与研究意义，介绍了模型预测控制的概况，比较了集中式、分散式和分布式模型预测控制的优缺点，详细分析了分布式模型预测控制的研究现状，并给出了贯穿本文的预备知识以及本文的研究内容。

第二章 \ 多个线性系统的协同分布式模型预测调节控制

主要研究了多个线性系统的协同分布式模型预测调节控制问题，智能体系统之间同时存在成本耦合和约束耦合。利用同步更新策略，提出了改进的相容性约束上界；设计了每个智能体的终端成分，并给出了其需要满足的条件；给出了分布式优化算法；分析了优化问题的迭代可行性和整个系统的闭环稳定性；最后通过仿真实验验证了算法的有效性。

第三章 \ 多个二阶非线性系统的分布式模型预测一致控制

主要研究了多个二阶非线性系统的分布式模型预测一致控制问题，智能体系统之间存在成本耦合。利用同步更新策略，提出了改进的相容性约束上界；利用参考轨迹，设计了每个智能体的终端成分，并给出了其需要满足的条件；给出了分布式优化算法；分析了优化问题的迭代可行性和整个系统的闭环收敛性；最后通过仿真实验验证了算法的有效性。

第四章 \ 多个线性二阶系统的分布式模型预测编队控制

主要研究了多个线性二阶系统的分布式模型预测编队控制问题，智能体系统之间存在耦合成本，且需要满足避碰约束。利用同步更新策略，提出了改进的相容性约束上界和改进的避碰约束；充分利用编队目标，设计了每个智能体的终端成分，并给出了其需要满足的条件；给出了分布式优化算法；分析了优化问题的迭代可行性、整个系统的闭环收敛性以及避碰约束的满足情况；最后通过仿真实验验证了算法的有效性。

第五章 \ 总结和展望

对全文的研究工作进行了总结和展望。
